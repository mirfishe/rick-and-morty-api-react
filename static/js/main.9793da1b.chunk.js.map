{"version":3,"sources":["Components/Characters/Character.js","Components/Characters/Characters.js","Components/Locations/Location.js","Components/Locations/Locations.js","Components/Episodes/Episode.js","Components/Episodes/Episodes.js","App.js","serviceWorker.js","index.js"],"names":["Character","props","Fragment","results","length","map","character","Card","key","id","className","CardBody","name","gender","species","status","type","location","origin","episodesList","Characters","useState","arrayEpisodes","setArrayEpisodes","arraySearchSpecies","setArraySearchSpecies","arraySearchCharacterTypes","setArraySearchCharacterTypes","setResults","errMessage","setErrMessage","txtSearchCharacterName","setTxtSearchCharacterName","ddSearchSpecies","setDdSearchSpecies","ddSearchCharacterType","setDdSearchCharacterType","ddSearchStatus","setDdSearchStatus","ddSearchGender","setDdSearchGender","useEffect","Alert","color","Row","FormGroup","Input","placeholder","onChange","event","target","value","Button","size","onClick","searchURL","url","searchString","undefined","replace","console","log","fetch","then","response","json","data","error","i","episodesArray","episode","j","k","substr","lastIndexOf","Object","assign","catch","err","Container","Location","dimension","residentsList","Locations","arrayCharacters","setArrayCharacters","arraySearchLocationTypes","setArraySearchLocationTypes","arraySearchDimensions","setArraySearchDimensions","txtSearchLocationName","setTxtSearchLocationName","ddSearchLocationType","setDdSearchLocationType","ddSearchDimension","setDdSearchDimension","residentsArray","residents","Episode","air_date","charactersList","Episodes","txtSearchEpisodeName","setTxtSearchEpisodeName","txtEpisode","setTxtEpisode","charactersArray","characters","App","charactersURL","locationsURL","episodesURL","isOpen","setIsOpen","activeTab","setActiveTab","errBuildCharacterLookups","setErrBuildCharacterLookups","errBuildLocationLookups","setErrBuildLocationLookups","errBuildEpisodeLookups","setErrBuildEpisodeLookups","arrayLocations","setArrayLocations","toggleTab","tab","lastPageOfCharacterResults","totalNumberOfCharacters","lastPageOfLocationResults","totalNumberOfLocations","arrCharacters","arrLocations","arrEpisodes","arrSearchSpecies","arrSearchCharacterTypes","arrSearchLocationTypes","arrSearchDimensions","charactersIDList","result","jsonData","info","pages","indexOf","push","sort","a","b","lastPageOfEpisodeResults","totalNumberOfEpisodes","locationIDList","episodeIDList","loadAllLookupArrays","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Jumbotron","tabs","classnames","active","TabContent","TabPane","tabId","Col","sm","paginationURL","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9793da1b.chunk.js","sourcesContent":["import React from \"react\";\nimport {Card, CardBody} from \"reactstrap\";\n\nconst Character = (props) => {\n\n    // console.log(\"Character.js props.results\", props.results);\n\n    return (\n        <React.Fragment>\n\n            {props.results.length > 0 ? props.results.map((character) => {\n                        // console.log(\"Character.js results.map character\", character);\n                    return (\n\n                        <Card key={character.id} className=\"m-2 p-2\">\n                        <CardBody>\n                            <p>{character.name}</p>\n                            <p>Gender: {character.gender}</p>\n                            <p>Species: {character.species}</p>\n                            <p>Status: {character.status}</p>\n                            <p>Type: {character.type}</p>\n                            <p>Location: {character.location.name}</p>\n                            <p>Origin: {character.origin.name}</p>\n\n                            <p>Episode(s): {character.episodesList}</p>\n                        </CardBody>\n                        </Card>\n                    )\n                })\n                    : null}\n\n        </React.Fragment>\n    );\n};\n\nexport default Character;\n","import React, {useState, useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Container, Row, FormGroup, Input, Button, Alert} from \"reactstrap\";\nimport Character from \"./Character\"\n\nconst Characters = (props) => {\n\n    // console.log(\"Characters.js props.url\", props.url);\n    // console.log(\"Characters.js props.paginationURL\", props.paginationURL);\n    // console.log(\"Characters.js props.arrayEpisodes\", props.arrayEpisodes);\n    // console.log(\"Characters.js props.arraySearchSpecies\", props.arraySearchSpecies);\n    // console.log(\"Characters.js props.arraySearchCharacterTypes\", props.arraySearchCharacterTypes);\n\n    // Build lookup arrays\n    const [arrayEpisodes, setArrayEpisodes] = useState([]);\n    const [arraySearchSpecies, setArraySearchSpecies] = useState([]);\n    const [arraySearchCharacterTypes, setArraySearchCharacterTypes] = useState([]);\n\n    const [results, setResults] = useState([]);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [txtSearchCharacterName, setTxtSearchCharacterName] = useState(\"\");\n    const [ddSearchSpecies, setDdSearchSpecies] = useState(\"\");\n    const [ddSearchCharacterType, setDdSearchCharacterType] = useState(\"\");\n    const [ddSearchStatus, setDdSearchStatus] = useState(\"\");\n    const [ddSearchGender, setDdSearchGender] = useState(\"\");\n\n    useEffect(() => {\n        // console.log(\"Characters.js useEffect props.arrayEpisodes\", props.arrayEpisodes);\n        setArrayEpisodes(props.arrayEpisodes);\n    }, [props.arrayEpisodes]);\n\n    useEffect(() => {\n        // console.log(\"Characters.js useEffect props.arraySearchSpecies\", props.arraySearchSpecies);\n        setArraySearchSpecies(props.arraySearchSpecies);\n        // buildSearchSpeciesLookup();\n    }, [props.arraySearchSpecies]);\n\n    useEffect(() => {\n        // console.log(\"Characters.js useEffect props.arraySearchCharacterTypes\", props.arraySearchCharacterTypes);\n        setArraySearchCharacterTypes(props.arraySearchCharacterTypes);\n    }, [props.arraySearchCharacterTypes]);\n\n    // useEffect(() => {\n    //     // console.log(\"Characters.js useEffect results\", results);\n    //     // console.log(\"Characters.js useEffect results.length\", results.length);\n    // }, [results]);\n\n    const searchCharacters = () => {\n\n        let searchURL = props.url;\n        let searchString = \"\";\n      \n        if (txtSearchCharacterName !== undefined) {\n            if (txtSearchCharacterName.length > 0) {\n                searchString += \"&name=\" + txtSearchCharacterName.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (ddSearchStatus !== undefined) {\n          if (ddSearchStatus !== \"\") {\n            searchString += \"&status=\" + ddSearchStatus.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchSpecies !== undefined) {\n          if (ddSearchSpecies !== \"\") {\n            searchString += \"&species=\" + ddSearchSpecies.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchCharacterType !== undefined) {\n          if (ddSearchCharacterType !== \"\") {\n            searchString += \"&type=\" + ddSearchCharacterType.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchGender !== undefined) {\n          if (ddSearchGender !== \"\") {\n            searchString += \"&gender=\" + ddSearchGender.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (searchString !== \"\") {\n            console.log(\"Characters.js searchCharacters searchString\", searchString);\n            searchURL += \"?\" + searchString;\n        };\n      \n        // console.log(\"Characters.js searchCharacters searchURL\", searchURL);\n\n        fetch(searchURL)\n        .then(response => {\n            // console.log(\"Characters.js searchCharacters response\", response);\n            // if (!response.ok) {\n                // throw Error(response.status + \" \" + response.statusText + \" \" + response.url);\n            // } else {\n                // if (response.status === 200) {\n                    return response.json();\n                // } else {\n                //     return response.status;\n                // };\n            // };\n        })\n        .then(data => {\n            // console.log(\"Characters.js searchCharacters data\", data);\n\n            if (data.error !== undefined) {\n                console.log(\"Characters.js searchCharacters data.error\", data.error);\n                setErrMessage(data.error);\n            } else {\n\n                for (let i = 0; i < data.results.length; i++) {\n                    // console.log(\"Characters.js searchCharacters data.results[i].residents\", data.results[i].residents);\n                    let episodesList = \"\";\n                    let episodesArray = data.results[i].episode;\n\n                    for (let j = 0; j < episodesArray.length; j++) {\n                        // console.log(\"Characters.js searchCharacters episodesArray[j]\", episodesArray[j]);\n                        for (let k = 0; k < arrayEpisodes.length; k++) {\n                            // console.log(\"Characters.js searchCharacters arrayEpisodes[k]\", arrayEpisodes[k]);\n                            if (episodesArray[j].substr(episodesArray[j].lastIndexOf(\"/\") + 1) == arrayEpisodes[k].id) {\n                              // console.log(\"Characters.js searchCharacters character name\", arrayEpisodes[k].name, \"it's a match\");\n\n                              break;\n                            };\n                          };\n\n                          episodesList += episodesArray[j].substr(episodesArray[j].lastIndexOf(\"/\") + 1);\n                          if (j < episodesArray.length - 1) {\n                            episodesList += \",\";\n                          };\n                    };\n\n                    // console.log(\"Characters.js searchCharacters episodesList\", episodesList);\n                    Object.assign(data.results[i], {episodesList: episodesList});\n\n                };\n\n                setResults(data.results);\n\n            };\n        })\n        .catch(err => {\n            console.log(\"Characters.js searchCharacters err\", err);\n            setErrMessage(err);\n        });\n\n    };\n\n    return (\n        <React.Fragment>\n                {errMessage !== \"\" ? <Alert color=\"danger\">{errMessage}</Alert> : \"\"}\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                <Input type=\"text\" id=\"txtSearchCharacterName\" placeholder=\"Name\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtSearchCharacterName(event.target.value);}} />\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchSpecies\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchSpecies(event.target.value);}}>\n                    <option value=\"\">Select Species</option>\n                    {arraySearchSpecies.length > 0 ? arraySearchSpecies.map((species) => {\n                        // console.log(\"Characters.js arraySearchSpecies.map species\", species);\n                    return (\n                        <option key={species} value={species}>{species}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchCharacterType\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchCharacterType(event.target.value);}}>\n                    <option value=\"\">Select Type</option>\n                    {arraySearchCharacterTypes.length > 0 ? arraySearchCharacterTypes.map((type) => {\n                        // console.log(\"Characters.js arraySearchCharacterTypes.map type\", type);\n                    return (\n                        <option key={type} value={type}>{type}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchStatus\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchStatus(event.target.value);}}>\n                    <option value=\"\">Select Status</option>\n                    <option value=\"alive\">Alive</option>\n                    <option value=\"dead\">Dead</option>\n                    <option value=\"unknown\">Unknown</option>\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchGender\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchGender(event.target.value);}}>\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"female\">Female</option>\n                    <option value=\"male\">Male</option>\n                    <option value=\"genderless\">Genderless</option>\n                    <option value=\"unknown\">Unknown</option>\n                </Input>\n                </FormGroup>\n                </Row>\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                    <Button id=\"btnSearchCharacters\" color=\"primary\" size=\"lg\" className=\"ml-4 m-2 p-2\" onClick={searchCharacters}>Search Characters</Button>\n                </FormGroup>\n                </Row>\n                {results.length > 0 ?\n                <Row className=\"m-2\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Character results={results} />\n                        </Row>\n                    </Container>\n                </Row>\n                : null}\n        </React.Fragment>\n    );\n};\n\nexport default Characters;","import React from \"react\";\nimport {Card, CardBody} from \"reactstrap\";\n\nconst Location = (props) => {\n\n    // console.log(\"Location.js props.results\", props.results);\n\n    return (\n        <React.Fragment>\n\n            {props.results.length > 0 ? props.results.map((location) => {\n                        // console.log(\"Location.js results.map location\", location);\n                    return (\n\n                        <Card key={location.id} className=\"m-2 p-2\">\n                        <CardBody>\n                            <p>{location.name}</p>\n                            <p>Dimension: {location.dimension}</p>\n                            <p>Type: {location.type}</p>\n                            <p>Resident(s): {location.residentsList}</p>\n                        </CardBody>\n                        </Card>\n                    )\n                })\n                    : null}\n\n            \n        </React.Fragment>\n    );\n};\n\nexport default Location;\n","import React, {useState, useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Container, Row, FormGroup, Input, Button, Alert} from \"reactstrap\";\nimport Location from \"./Location\"\n\nconst Locations = (props) => {\n\n    // console.log(\"Locations.js props.url\", props.url);\n    // console.log(\"Locations.js props.paginationURL\", props.paginationURL);\n    // console.log(\"Locations.js props.arrayCharacters\", props.arrayCharacters);\n    // console.log(\"Locations.js props.arraySearchLocationTypes\", props.arraySearchLocationTypes);\n    // console.log(\"Locations.js props.arraySearchDimensions\", props.arraySearchDimensions);\n\n    // Build lookup arrays\n    const [arrayCharacters, setArrayCharacters] = useState([]);\n    const [arraySearchLocationTypes, setArraySearchLocationTypes] = useState([]);\n    const [arraySearchDimensions, setArraySearchDimensions] = useState([]);\n\n    const [results, setResults] = useState([]);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [txtSearchLocationName, setTxtSearchLocationName] = useState(\"\");\n    const [ddSearchLocationType, setDdSearchLocationType] = useState(\"\");\n    const [ddSearchDimension, setDdSearchDimension] = useState(\"\");\n\n    useEffect(() => {\n        // console.log(\"Locations.js useEffect props.arrayCharacters\", props.arrayCharacters);\n        setArrayCharacters(props.arrayCharacters);\n    }, [props.arrayCharacters]);\n\n    useEffect(() => {\n        // console.log(\"Locations.js useEffect props.arraySearchLocationTypes\", props.arraySearchLocationTypes);\n        setArraySearchLocationTypes(props.arraySearchLocationTypes);\n        // buildSearchSpeciesLookup();\n    }, [props.arraySearchLocationTypes]);\n\n    useEffect(() => {\n        // console.log(\"Locations.js useEffect props.arraySearchDimensions\", props.arraySearchDimensions);\n        setArraySearchDimensions(props.arraySearchDimensions);\n    }, [props.arraySearchDimensions]);\n\n    // useEffect(() => {\n    //     // console.log(\"Locations.js useEffect results\", results);\n    //     // console.log(\"Locations.js useEffect results.length\", results.length);\n    // }, [results]);\n\n    const searchLocations = () => {\n\n        let searchURL = props.url;\n        let searchString = \"\";\n      \n        if (txtSearchLocationName !== undefined) {\n            if (txtSearchLocationName.length > 0) {\n                searchString += \"&name=\" + txtSearchLocationName.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (ddSearchLocationType !== undefined) {\n          if (ddSearchLocationType !== \"\") {\n            searchString += \"&type=\" + ddSearchLocationType.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchDimension !== undefined) {\n          if (ddSearchDimension !== \"\") {\n            searchString += \"&dimension=\" + ddSearchDimension.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (searchString !== \"\") {\n            console.log(\"Locations.js searchLocations searchString\", searchString);\n            searchURL += \"?\" + searchString;\n        };\n      \n        // console.log(\"Locations.js searchLocations searchURL\", searchURL);\n\n        fetch(searchURL)\n        .then(response => {\n            // console.log(\"Locations.js searchLocations response\", response);\n            // if (!response.ok) {\n                // throw Error(response.status + \" \" + response.statusText + \" \" + response.url);\n            // } else {\n                // if (response.status === 200) {\n                    return response.json();\n                // } else {\n                //     return response.status;\n                // };\n            // };\n        })\n        .then(data => {\n            // console.log(\"Locations.js searchLocations data\", data);\n\n            if (data.error !== undefined) {\n                console.log(\"Locations.js searchLocations data.error\", data.error);\n                setErrMessage(data.error);\n            } else {\n\n                for (let i = 0; i < data.results.length; i++) {\n                    // console.log(\"Locations.js searchLocations data.results[i].residents\", data.results[i].residents);\n                    let residentsList = \"\";\n                    let residentsArray = data.results[i].residents;\n\n                    for (let j = 0; j < residentsArray.length; j++) {\n                        // console.log(\"Locations.js searchLocations residentsArray[j]\", residentsArray[j]);\n                        for (let k = 0; k < arrayCharacters.length; k++) {\n                            // console.log(\"Locations.js searchLocations arrayCharacters[k]\", arrayCharacters[k]);\n                            if (residentsArray[j].substr(residentsArray[j].lastIndexOf(\"/\") + 1) == arrayCharacters[k].id) {\n                              // console.log(\"Locations.js searchLocations character name\", arrayCharacters[k].name, \"it's a match\");\n\n                              break;\n                            };\n                          };\n\n                          residentsList += residentsArray[j].substr(residentsArray[j].lastIndexOf(\"/\") + 1);\n                          if (j < residentsArray.length - 1) {\n                            residentsList += \",\";\n                          };\n                    };\n\n                    // console.log(\"Locations.js searchLocations residentsList\", residentsList);\n                    Object.assign(data.results[i], {residentsList: residentsList});\n\n                };\n\n                setResults(data.results);\n\n            };\n\n        })\n        .catch(err => {\n            console.log(\"Locations.js searchLocations err\", err);\n            setErrMessage(err);\n        });\n\n    };\n\n    return (\n        <React.Fragment>\n                {errMessage !== \"\" ? <Alert color=\"danger\">{errMessage}</Alert> : \"\"}\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                <Input type=\"text\" id=\"txtSearchLocationName\" placeholder=\"Name\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtSearchLocationName(event.target.value);}} />\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchLocationType\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchLocationType(event.target.value);}} >\n                    <option value=\"\">Select Type</option>\n                    {arraySearchLocationTypes.length > 0 ? arraySearchLocationTypes.map((type) => {\n                        // console.log(\"Locations.js arraySearchLocationTypes.map type\", type);\n                    return (\n                        <option key={type} value={type}>{type}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchDimension\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchDimension(event.target.value);}} >\n                    <option value=\"\">Select Dimension</option>\n                    {arraySearchDimensions.length > 0 ? arraySearchDimensions.map((dimension) => {\n                        // console.log(\"Locations.js arraySearchDimensions.map dimension\", dimension);\n                    return (\n                        <option key={dimension} value={dimension}>{dimension}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                </Row>\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                    <Button id=\"btnSearchLocations\" color=\"primary\" size=\"lg\" className=\"ml-4 m-2 p-2\" onClick={searchLocations}>Search Locations</Button>\n                </FormGroup>\n                </Row>\n                {results.length > 0 ?\n                <Row className=\"m-2\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Location results={results} />\n                        </Row>\n                    </Container>\n                </Row>\n                : null}\n        </React.Fragment>\n    );\n};\n\nexport default Locations;","import React from \"react\";\nimport {Card, CardBody} from \"reactstrap\";\n\nconst Episode = (props) => {\n\n    // console.log(\"Episode.js props.results\", props.results);\n\n    return (\n        <React.Fragment>\n\n            {props.results.length > 0 ? props.results.map((episode) => {\n                        // console.log(\"Episode.js results.map episode\", episode);\n                    return (\n\n                        <Card key={episode.id} className=\"m-2 p-2\">\n                        <CardBody>\n                            <p>{episode.name}</p>\n                            <p>Episode: {episode.episode}</p>\n                            <p>Air Date: {episode.air_date}</p>\n                            <p>Character(s): {episode.charactersList}</p>\n                        </CardBody>\n                        </Card>\n                    )\n                })\n                    : null}\n\n        </React.Fragment>\n    );\n};\n\nexport default Episode;\n","import React, {useState, useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Container, Row, FormGroup, Input, Button, Alert} from \"reactstrap\";\nimport Episode from \"./Episode\"\n\nconst Episodes = (props) => {\n\n    // console.log(\"Episodes.js props.url\", props.url);\n    // console.log(\"Episodes.js props.paginationURL\", props.paginationURL);\n    // console.log(\"Episodes.js props.arrayCharacters\", props.arrayCharacters);\n    // console.log(\"Episodes.js props.arrayLocations\", props.arrayLocations);\n\n    // Build lookup arrays\n    const [arrayCharacters, setArrayCharacters] = useState([]);\n\n    const [results, setResults] = useState([]);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [txtSearchEpisodeName, setTxtSearchEpisodeName] = useState(\"\");\n    const [txtEpisode, setTxtEpisode] = useState(\"\");\n\n    useEffect(() => {\n        // console.log(\"Episodes.js useEffect props.arrayCharacters\", props.arrayCharacters);\n        setArrayCharacters(props.arrayCharacters);\n    }, [props.arrayCharacters]);\n\n    // useEffect(() => {\n    //     // console.log(\"Episodes.js useEffect results\", results);\n    //     // console.log(\"Episodes.js useEffect results.length\", results.length);\n    // }, [results]);\n\n    const searchEpisodes = () => {\n\n        let searchURL = props.url;\n        let searchString = \"\";\n      \n        if (txtSearchEpisodeName !== undefined) {\n            if (txtSearchEpisodeName.length > 0) {\n                searchString += \"&name=\" + txtSearchEpisodeName.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (txtEpisode !== undefined) {\n            if (txtEpisode.length > 0) {\n                searchString += \"&episode=\" + txtEpisode.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (searchString !== \"\") {\n            console.log(\"Episodes.js searchEpisodes searchString\", searchString);\n            searchURL += \"?\" + searchString;\n        };\n      \n        // console.log(\"Episodes.js searchEpisodes searchURL\", searchURL);\n      \n        fetch(searchURL)\n        .then(response => {\n            // console.log(\"Episodes.js searchEpisodes response\", response);\n            // if (!response.ok) {\n                // throw Error(response.status + \" \" + response.statusText + \" \" + response.url);\n            // } else {\n                // if (response.status === 200) {\n                    return response.json();\n                // } else {\n                //     return response.status;\n                // };\n            // };\n        })\n        .then(data => {\n            // console.log(\"Episodes.js searchEpisodes data\", data);\n\n            if (data.error !== undefined) {\n                console.log(\"Episodes.js searchEpisodes data.error\", data.error);\n                setErrMessage(data.error);\n            } else {\n\n                for (let i = 0; i < data.results.length; i++) {\n                    // console.log(\"Episodes.js searchEpisodes data.results[i].residents\", data.results[i].residents);\n                    let charactersList = \"\";\n                    let charactersArray = data.results[i].characters;\n\n                    for (let j = 0; j < charactersArray.length; j++) {\n                        // console.log(\"Episodes.js searchEpisodes charactersArray[j]\", charactersArray[j]);\n                        for (let k = 0; k < arrayCharacters.length; k++) {\n                            // console.log(\"Episodes.js searchEpisodes arrayCharacters[k]\", arrayCharacters[k]);\n                            if (charactersArray[j].substr(charactersArray[j].lastIndexOf(\"/\") + 1) == arrayCharacters[k].id) {\n                              // console.log(\"Episodes.js searchEpisodes character name\", arrayCharacters[k].name, \"it's a match\");\n\n                              break;\n                            };\n                          };\n\n                          charactersList += charactersArray[j].substr(charactersArray[j].lastIndexOf(\"/\") + 1);\n                          if (j < charactersArray.length - 1) {\n                            charactersList += \",\";\n                          };\n                    };\n\n                    // console.log(\"Episodes.js searchEpisodes charactersList\", charactersList);\n                    Object.assign(data.results[i], {charactersList: charactersList});\n\n                };\n\n                setResults(data.results);\n\n            };\n        })\n        .catch(err => {\n            console.log(\"Episodes.js searchEpisodes err\", err);\n            setErrMessage(err);\n        });\n\n    };\n\n    return (\n        <React.Fragment>\n                {errMessage !== \"\" ? <Alert color=\"danger\">{errMessage}</Alert> : \"\"}\n                <Row className=\"m-2\">\n                    <FormGroup className=\"m-2\">\n                    <Input type=\"text\" id=\"txtSearchEpisodeName\" placeholder=\"Name\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtSearchEpisodeName(event.target.value);}} />\n                    </FormGroup>\n                    <FormGroup className=\"m-2\">\n                    <Input type=\"text\" id=\"txtEpisode\" placeholder=\"Episode\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtEpisode(event.target.value);}} />\n                    </FormGroup>\n                </Row>\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                    <Button id=\"btnSearchEpisodes\" color=\"primary\" size=\"lg\" className=\"ml-4 m-2 p-2\" onClick={searchEpisodes}>Search Episodes</Button>\n                </FormGroup>\n                </Row>\n                {results.length > 0 ?\n                <Row className=\"m-2\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Episode results={results} />\n                        </Row>\n                    </Container>\n                </Row>\n                : null}\n        </React.Fragment>\n    );\n};\n\nexport default Episodes;","import React, {useState, useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport {Col, Row, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, Jumbotron, TabContent, TabPane, Alert} from \"reactstrap\";\nimport classnames from \"classnames\";\nimport Characters from \"./Components/Characters/Characters\";\nimport Locations from \"./Components/Locations/Locations\";\nimport Episodes from \"./Components/Episodes/Episodes\";\n\nfunction App() {\n\n  // const baseURL = \"https://rickandmortyapi.com/api/\";\n  const charactersURL = \"https://rickandmortyapi.com/api/character/\";\n  const locationsURL = \"https://rickandmortyapi.com/api/location/\";\n  const episodesURL = \"https://rickandmortyapi.com/api/episode/\";\n  const paginationURL = \"?page=\"\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"0\");\n  const [errBuildCharacterLookups, setErrBuildCharacterLookups] = useState(\"\");\n  const [errBuildLocationLookups, setErrBuildLocationLookups] = useState(\"\");\n  const [errBuildEpisodeLookups, setErrBuildEpisodeLookups] = useState(\"\");\n\n  // Build lookup arrays\n  const [arrayCharacters, setArrayCharacters] = useState([]);\n  const [arrayLocations, setArrayLocations] = useState([]);\n  const [arrayEpisodes, setArrayEpisodes] = useState([]);\n\n  const [arraySearchSpecies, setArraySearchSpecies] = useState([]);\n  const [arraySearchCharacterTypes, setArraySearchCharacterTypes] = useState([]);\n  const [arraySearchLocationTypes, setArraySearchLocationTypes] = useState([]);\n  const [arraySearchDimensions, setArraySearchDimensions] = useState([]);\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const toggleTab = (tab) => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    };\n  };\n\n  const loadAllLookupArrays = () => {\n\n    // Build lookup arrays\n    let arrCharacters = [];\n    let arrLocations = [];\n    let arrEpisodes = [];\n\n    let arrSearchSpecies = [];\n    let arrSearchCharacterTypes = [];\n    let arrSearchLocationTypes = [];\n    let arrSearchDimensions = [];\n\n    // Create characters URL of all possible character IDs?\n    // Fetch that and read results\n    // current total number of characters + to get the correct index value(?)\n    // used a number higher than the current total number of characters and it worked\n\n    let lastPageOfCharacterResults;\n    let totalNumberOfCharacters; // = 700 + 1; // Just over the hishest character id on 09/04/2020\n    let charactersIDList = \"\";\n\n    fetch(charactersURL)\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      // Assumes that the highest character id = record count\n      // totalNumberOfCharacters = jsonData.info.count; // + 1; to account for the index of the array starting at zero -- Not needed\n      // console.log(\"totalNumberOfCharacters\", totalNumberOfCharacters);\n      lastPageOfCharacterResults = charactersURL + paginationURL + jsonData.info.pages;\n      // console.log(\"lastPageOfCharacterResults\", lastPageOfCharacterResults);\n\n      return fetch(lastPageOfCharacterResults);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData.results;\n      // console.log(results);\n\n      // console.log(\"results.length\", results.length);\n      totalNumberOfCharacters = results[results.length - 1].id;\n      // console.log(\"totalNumberOfCharacters\", totalNumberOfCharacters);\n\n      for (let i = 1; i < totalNumberOfCharacters; i++) {\n        charactersIDList += i;\n          if (i < totalNumberOfCharacters - 1) {\n            charactersIDList += \",\";\n          };\n      };\n      \n      // console.log(\"charactersIDList\", charactersIDList);\n      // console.log(\"charactersURL\", charactersURL + charactersIDList);\n\n      // From https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\n      return fetch(charactersURL + charactersIDList);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData;\n      \n      // Build lookup arrays\n      // https://truetocode.com/check-for-duplicates-in-array-of-javascript-objects/\n      for (let i = 0; i < results.length; i++) {\n        let arrIDs =  arrCharacters.map((value)=>{return value.id;});\n        if (arrIDs.indexOf(results[i].id) === -1) {\n          arrCharacters.push({id: results[i].id, name: results[i].name, url: results[i].url});\n        };\n        // a.findIndex(t=>(t.place === v.place && t.name===v.name))===i) // https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n        // seen.hasOwnProperty(currentObject.name) // https://stackoverflow.com/questions/30735465/how-can-i-check-if-the-array-of-objects-have-duplicate-property-values\n        //if (!arrCharacters.hasOwnProperty(results[i].id)) { // How's this work with an object?\n        // if statement isn't working correcly\n        //  arrCharacters.push({id: results[i].id, name: results[i].name, url: results[i].url});\n        // };\n\n        // https://www.geeksforgeeks.org/how-to-remove-duplicates-from-an-array-of-objects-using-javascript/\n        // copiedarrCharacters = [...arrCharacters];\n        // arrCharacters = copiedarrCharacters.filter(function(item, index){\n        //   return copiedarrCharacters.indexOf(item) >= index;\n        // });\n\n        // https://dev.to/marinamosti/removing-duplicates-in-an-array-of-objects-in-js-with-sets-3fep\n        // let copiedarrCharacters = Array.from(new Set(id.map(a => a.id))).map(id => { return id.find(a => a.id === id) });\n        // console.log(copiedarrCharacters);\n\n        if (results[i].species !== \"\") {\n          if (arrSearchSpecies.indexOf(results[i].species) === -1) {\n            arrSearchSpecies.push(results[i].species);\n          };\n        };\n        if (results[i].type !== \"\") {\n          if (arrSearchCharacterTypes.indexOf(results[i].type) === -1) {\n            arrSearchCharacterTypes.push(results[i].type);\n          };\n        };\n    };\n\n      // Sort the array\n      arrSearchSpecies.sort((a, b) => {\n        if (a > b) {\n            return 1;\n        } else {\n            return -1;\n        };\n      });\n\n      // Sort the array\n      arrSearchCharacterTypes.sort((a, b) => {\n        if (a > b) {\n            return 1;\n        } else {\n            return -1;\n        };\n      });\n\n      // View lookup arrays\n      // console.log(\"App.js loadAllLookupArrays arrCharacters\", arrCharacters);\n      // console.log(\"App.js loadAllLookupArrays arrSearchSpecies\", arrSearchSpecies);\n      // console.log(\"App.js loadAllLookupArrays arrSearchCharacterTypes\", arrSearchCharacterTypes);\n\n    })\n    .catch(err => {\n      console.log(\"App.js loadAllLookupArrays Character Lookups err\", err);\n      setErrBuildCharacterLookups(err);\n    });\n\n\n\n\n\n    // Create locations URL of all possible location IDs?\n    // Fetch that and read results\n    // current total number of locations + to get the correct index value(?)\n    // used a number higher than the current total number of locations and it worked\n    let lastPageOfLocationResults;\n    let totalNumberOfLocations; // = 50 + 1; // Just over the hishest location id on 09/04/2020\n    let locationIDList = \"\";\n\n    fetch(locationsURL)\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      // Assumes that the highest character id = record count\n      // totalNumberOfLocations = jsonData.info.count; // + 1; to account for the index of the array starting at zero -- Not needed\n      // console.log(\"totalNumberOfLocations\", totalNumberOfLocations);\n      lastPageOfLocationResults = locationsURL + paginationURL + jsonData.info.pages;\n      // console.log(\"lastPageOfLocationResults\", lastPageOfLocationResults);\n\n      return fetch(lastPageOfLocationResults);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData.results;\n      // console.log(results);\n\n      // console.log(\"results.length\", results.length);\n      totalNumberOfLocations = results[results.length - 1].id;\n      // console.log(\"totalNumberOfLocations\", totalNumberOfLocations);\n\n      for (let i = 1; i < totalNumberOfLocations; i++) {\n        locationIDList += i;\n          if (i < totalNumberOfLocations - 1) {\n            locationIDList += \",\";\n          };\n      };\n      \n      // console.log(\"locationIDList\", locationIDList);\n      // console.log(\"locationsURL\", locationsURL + locationIDList);\n\n      // From https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\n      return fetch(locationsURL + locationIDList);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData;\n\n      // Build lookup arrays\n      for (let i = 0; i < results.length; i++) {\n        let arrIDs =  arrLocations.map((value)=>{ return value.id;});\n        if (arrIDs.indexOf(results[i].id) === -1) {\n          arrLocations.push({id: results[i].id, name: results[i].name, url: results[i].url});\n        };\n\n        if (results[i].type !== \"\") {\n          if (arrSearchLocationTypes.indexOf(results[i].type) === -1) {\n            arrSearchLocationTypes.push(results[i].type);\n          };\n        };\n        if (results[i].dimension !== \"\") {\n          if (arrSearchDimensions.indexOf(results[i].dimension) === -1) {\n            arrSearchDimensions.push(results[i].dimension);\n          };\n        };\n      };\n\n      // Sort the array\n      arrSearchLocationTypes.sort((a, b) => {\n        if (a > b) {\n            return 1;\n        } else {\n            return -1;\n        };\n      });\n\n      // Sort the array\n      arrSearchDimensions.sort((a, b) => {\n        if (a > b) {\n            return 1;\n        } else {\n            return -1;\n        };\n      });\n\n    // View lookup arrays\n    // console.log(\"App.js loadAllLookupArrays arrLocations\", arrLocations);\n    // console.log(\"App.js loadAllLookupArrays arrSearchLocationTypes\", arrSearchLocationTypes);\n    // console.log(\"App.js loadAllLookupArrays arrSearchDimensions\", arrSearchDimensions);\n\n    })\n    .catch(err => {\n      console.log(\"App.js loadAllLookupArrays Location Lookups err\", err);\n      setErrBuildLocationLookups(err);\n    });\n\n\n\n\n    // Create episode URL of all possible episode IDs?\n    // Fetch that and read results\n    // current total number of episodes + to get the correct index value(?)\n    // used a number higher than the current total number of episodes and it worked\n    let lastPageOfEpisodeResults;\n    let totalNumberOfEpisodes; // = 50 + 1;// Just over the hishest episode id on 09/04/2020\n    let episodeIDList = \"\";\n\n    fetch(episodesURL)\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      // Assumes that the highest character id = record count\n      // totalNumberOfEpisodes = jsonData.info.count; // + 1; to account for the index of the array starting at zero -- Not needed\n      // console.log(\"totalNumberOfEpisodes\", totalNumberOfEpisodes);\n      lastPageOfEpisodeResults = locationsURL + paginationURL + jsonData.info.pages;\n      // console.log(\"lastPageOfEpisodeResults\", lastPageOfEpisodeResults);\n\n      return fetch(lastPageOfEpisodeResults);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData.results;\n      // console.log(results);\n\n      // console.log(\"results.length\", results.length);\n      totalNumberOfEpisodes = results[results.length - 1].id;\n      // console.log(\"totalNumberOfEpisodes\", totalNumberOfEpisodes);\n\n      for (let i = 1; i < totalNumberOfEpisodes; i++) {\n        episodeIDList += i;\n          if (i < totalNumberOfEpisodes - 1) {\n            episodeIDList += \",\";\n          };\n      };\n      \n      // console.log(\"episodeIDList\", episodeIDList);\n      // console.log(\"episodesURL\", episodesURL + episodeIDList);\n\n      // From https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\n      return fetch(episodesURL + episodeIDList);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData;\n\n      // Build lookup arrays\n      for (let i = 0; i < results.length; i++) {\n        let arrIDs =  arrEpisodes.map((value)=>{ return value.id;});\n        if (arrIDs.indexOf(results[i].id) === -1) {\n          arrEpisodes.push({id: results[i].id, name: results[i].name, url: results[i].url});\n        };\n      };\n\n      // View lookup arrays\n      // console.log(\"App.js loadAllLookupArrays arrEpisodes\", arrEpisodes);\n\n    })\n    .catch(err => {\n        console.log(\"App.js loadAllLookupArrays Episode Lookups err\", err);\n        setErrBuildEpisodeLookups(err);\n    });\n\n\n  setArrayCharacters(arrCharacters);\n  setArrayLocations(arrLocations);\n  setArrayEpisodes(arrEpisodes);\n\n  setArraySearchSpecies(arrSearchSpecies);\n  setArraySearchCharacterTypes(arrSearchCharacterTypes);\n  setArraySearchLocationTypes(arrSearchLocationTypes);\n  setArraySearchDimensions(arrSearchDimensions);\n\n  };\n\n  useEffect(() => {\n\n    loadAllLookupArrays();\n\n  }, []);\n\n  useEffect(() => {\n    // console.log(\"App.js useEffect arrayCharacters\", arrayCharacters);\n  }, [arrayCharacters]);\n\n  useEffect(() => {\n    // console.log(\"App.js useEffect arrayLocations\", arrayLocations);\n  }, [arrayLocations]);\n\n  useEffect(() => {\n    // console.log(\"App.js useEffect arrayEpisodes\", arrayEpisodes);\n  }, [arrayEpisodes]);\n  \n  useEffect(() => {\n    // console.log(\"App.js useEffect arraySearchSpecies\", arraySearchSpecies);\n  }, [arraySearchSpecies]);\n  \n  useEffect(() => {\n    // console.log(\"App.js useEffect arraySearchCharacterTypes\", arraySearchCharacterTypes);\n  }, [arraySearchCharacterTypes]);\n  \n  useEffect(() => {\n    // console.log(\"App.js useEffect arraySearchLocationTypes\", arraySearchLocationTypes);\n  }, [arraySearchLocationTypes]);\n  \n  useEffect(() => {\n    // console.log(\"App.js useEffect arraySearchDimensions\", arraySearchDimensions);\n  }, [arraySearchDimensions]);\n  \n\n  return (\n    <React.Fragment>\n    <Navbar color=\"light\" light expand=\"md\">\n      <NavbarBrand href=\"/\">Rick and Morty</NavbarBrand>\n      <NavbarToggler onClick={toggleMenu} />\n      <Collapse isOpen={isOpen} navbar>\n      <Nav className=\"mr-auto\" navbar>\n        <NavItem>\n          <NavLink href=\"https://rickandmortyapi.com\" target=\"_blank\">Rick and Morty API</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"https://rickandmortyapi.com/documentation\" target=\"_blank\">Rick and Morty API Documentation</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"https://mirfishe.github.io/Rick-and-Morty-API/\" target=\"_blank\">Rick and Morty</NavLink>\n        </NavItem>\n        </Nav>\n      </Collapse>\n    </Navbar>\n\n    <Jumbotron>\n        <h1 className=\"display-3\">Rick and Morty</h1>\n    </Jumbotron>\n\n    {errBuildCharacterLookups !== \"\" ? <Alert color=\"danger\">{errBuildCharacterLookups}</Alert> : \"\"}\n    {errBuildLocationLookups !== \"\" ? <Alert color=\"danger\">{errBuildLocationLookups}</Alert> : \"\"}\n    {errBuildEpisodeLookups !== \"\" ? <Alert color=\"danger\">{errBuildEpisodeLookups}</Alert> : \"\"}\n\n    <Nav tabs className=\"m-2\">\n      <NavItem>\n        <NavLink className={classnames({active: activeTab === \"1\"})} onClick={() => {toggleTab(\"1\");}}>Search Characters</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className={classnames({active: activeTab === \"2\"})} onClick={() => {toggleTab(\"2\");}}>Search Locations</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className={classnames({active: activeTab === \"3\"})} onClick={() => {toggleTab(\"3\");}}>Search Episodes</NavLink>\n      </NavItem>\n    </Nav>\n    <TabContent activeTab={activeTab}>\n      <TabPane tabId=\"1\">\n        <Row>\n          <Col sm=\"12\">\n            <Characters url={charactersURL} paginationURL={paginationURL} arrayLocations={arrayLocations} arrayEpisodes={arrayEpisodes} arraySearchSpecies={arraySearchSpecies} arraySearchCharacterTypes={arraySearchCharacterTypes} />\n          </Col>\n        </Row>\n      </TabPane>\n      </TabContent>\n      <TabContent activeTab={activeTab}>\n      <TabPane tabId=\"2\">\n        <Row>\n          <Col sm=\"12\">\n            <Locations url={locationsURL} paginationURL={paginationURL} arrayCharacters={arrayCharacters} arraySearchLocationTypes={arraySearchLocationTypes} arraySearchDimensions={arraySearchDimensions} />\n          </Col>\n        </Row>\n      </TabPane>\n      </TabContent>\n      <TabContent activeTab={activeTab}>\n      <TabPane tabId=\"3\">\n        <Row>\n          <Col sm=\"12\">\n            <Episodes url={episodesURL} paginationURL={paginationURL} arrayCharacters={arrayCharacters} />\n          </Col>\n        </Row>\n      </TabPane>\n    </TabContent>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}