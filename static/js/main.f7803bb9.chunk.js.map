{"version":3,"sources":["Components/Characters/Character.js","Components/Characters/Characters.js","Components/Locations/Location.js","Components/Locations/Locations.js","Components/Episodes/Episode.js","Components/Episodes/Episodes.js","App.js","serviceWorker.js","index.js"],"names":["Character","props","Fragment","results","length","map","character","Card","key","id","className","src","image","alt","name","CardBody","CardLink","href","url","onClick","loadDetailsModal","gender","event","preventDefault","console","log","setDdSearchGender","species","setDdSearchSpecies","status","setDdSearchStatus","type","setDdSearchCharacterType","origin","episodesList","Characters","useState","arrayEpisodes","setArrayEpisodes","arraySearchSpecies","setArraySearchSpecies","arraySearchCharacterTypes","setArraySearchCharacterTypes","setUrl","setResults","currentPage","setCurrentPage","lastPage","setLastPage","errMessage","setErrMessage","txtSearchCharacterName","setTxtSearchCharacterName","ddSearchSpecies","ddSearchCharacterType","ddSearchStatus","ddSearchGender","useEffect","undefined","searchCharacters","buildURL","searchString","replace","getResults","fetch","then","response","json","data","error","info","pages","i","episodesArray","episode","j","k","substr","lastIndexOf","Object","assign","catch","err","Alert","color","Row","FormGroup","Input","placeholder","onChange","target","value","Button","size","Container","Col","includes","paginationURL","slice","buildNextPage","Location","location","setDdSearchLocationType","dimension","setDdSearchDimension","residentsList","Locations","arrayCharacters","setArrayCharacters","arraySearchLocationTypes","setArraySearchLocationTypes","arraySearchDimensions","setArraySearchDimensions","txtSearchLocationName","setTxtSearchLocationName","ddSearchLocationType","ddSearchDimension","searchLocations","residentsArray","residents","Episode","air_date","charactersList","Episodes","txtSearchEpisodeName","setTxtSearchEpisodeName","txtEpisode","setTxtEpisode","charactersArray","characters","App","charactersURL","locationsURL","episodesURL","isOpen","setIsOpen","activeTab","setActiveTab","errBuildCharacterLookups","setErrBuildCharacterLookups","errBuildLocationLookups","setErrBuildLocationLookups","errBuildEpisodeLookups","setErrBuildEpisodeLookups","arrayLocations","setArrayLocations","toggleTab","tab","lastPageOfCharacterResults","totalNumberOfCharacters","lastPageOfLocationResults","totalNumberOfLocations","arrCharacters","arrLocations","arrEpisodes","arrSearchSpecies","arrSearchCharacterTypes","arrSearchLocationTypes","arrSearchDimensions","charactersIDList","result","jsonData","indexOf","push","sort","a","b","lastPageOfEpisodeResults","totalNumberOfEpisodes","locationIDList","episodeIDList","loadAllLookupArrays","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Jumbotron","tabs","classnames","active","TabContent","TabPane","tabId","sm","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f7803bb9.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Container, Col, Row, Card, CardBody, CardLink} from \"reactstrap\";\n\nconst Character = (props) => {\n\n    // console.log(\"Character.js props.results\", props.results);\n\n    return (\n        <React.Fragment>\n\n            {props.results.length > 0 ? props.results.map((character) => {\n                        // console.log(\"Character.js results.map character\", character);\n                    return (\n\n                        <Card key={character.id} className=\"m-2 p-2\">\n                            <img src={character.image} alt={character.name} />\n                        <CardBody>\n                            <p><CardLink href={character.url} onClick={props.loadDetailsModal}>{character.name}</CardLink></p>\n                            <p>Gender: <CardLink href={character.gender} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Character.js props.setDdSearchGender(character.gender)\", character.gender); props.setDdSearchGender(character.gender);}}>{character.gender}</CardLink></p>\n                            <p>Species: <CardLink href={character.species} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Character.js props.setDdSearchSpecies(character.species)\", character.species); props.setDdSearchSpecies(character.species);}}>{character.species}</CardLink></p>\n                            <p>Status: <CardLink href={character.status} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Character.js props.setDdSearchStatus(character.status)\", character.status); props.setDdSearchStatus(character.status);}}>{character.status}</CardLink></p>\n                            <p>Type: <CardLink href={character.type} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Character.js props.setDdSearchCharacterType(character.type)\", character.type); props.setDdSearchCharacterType(character.type);}}>{character.type}</CardLink></p>\n                            <p>Location: <CardLink href={character.character.url} onClick={props.loadDetailsModal}>{character.character.name}</CardLink></p>\n                            <p>Origin: <CardLink href={character.origin.url} onClick={props.loadDetailsModal}>{character.origin.name}</CardLink></p>\n\n                            <p>Episode(s): \n                            {/* {character.episode.map((episode, index) => {\n                                console.log(\"Character.js episodes.map episode\", episode);\n                                return ({index})\n                                })} */}\n                                {/* {character.episodesList} */}\n                            </p>\n                            <p><CardLink href={character.episodesList} onClick={props.loadDetailsModal}>All Episode(s):</CardLink></p>\n                        </CardBody>\n                        </Card>\n                    )\n                })\n                    : null}\n\n        </React.Fragment>\n    );\n};\n\nexport default Character;\n","import React, {useState, useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Container, Row, Col, FormGroup, Input, Button, Alert} from \"reactstrap\";\nimport Character from \"./Character\"\n\nconst Characters = (props) => {\n\n    // console.log(\"Characters.js props.url\", props.url);\n    // console.log(\"Characters.js props.paginationURL\", props.paginationURL);\n    // console.log(\"Characters.js props.arrayEpisodes\", props.arrayEpisodes);\n    // console.log(\"Characters.js props.arraySearchSpecies\", props.arraySearchSpecies);\n    // console.log(\"Characters.js props.arraySearchCharacterTypes\", props.arraySearchCharacterTypes);\n\n    // Build lookup arrays\n    const [arrayEpisodes, setArrayEpisodes] = useState([]);\n    const [arraySearchSpecies, setArraySearchSpecies] = useState([]);\n    const [arraySearchCharacterTypes, setArraySearchCharacterTypes] = useState([]);\n\n    // The setState seems to run too slow to be used to store the url and paging variables for the fetch; use it to keep the state between fetches.\n    const [url, setUrl] = useState(\"\");\n    const [results, setResults] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    // const [nextPage, setNextPage] = useState(0);\n    const [lastPage, setLastPage] = useState(0);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [txtSearchCharacterName, setTxtSearchCharacterName] = useState(\"\");\n    const [ddSearchSpecies, setDdSearchSpecies] = useState(\"\");\n    const [ddSearchCharacterType, setDdSearchCharacterType] = useState(\"\");\n    const [ddSearchStatus, setDdSearchStatus] = useState(\"\");\n    const [ddSearchGender, setDdSearchGender] = useState(\"\");\n\n    useEffect(() => {\n        // console.log(\"Characters.js useEffect props.arrayEpisodes\", props.arrayEpisodes);\n        setArrayEpisodes(props.arrayEpisodes);\n    }, [props.arrayEpisodes]);\n\n    useEffect(() => {\n        // console.log(\"Characters.js useEffect props.arraySearchSpecies\", props.arraySearchSpecies);\n        setArraySearchSpecies(props.arraySearchSpecies);\n        // buildSearchSpeciesLookup();\n    }, [props.arraySearchSpecies]);\n\n    useEffect(() => {\n        // console.log(\"Characters.js useEffect props.arraySearchCharacterTypes\", props.arraySearchCharacterTypes);\n        setArraySearchCharacterTypes(props.arraySearchCharacterTypes);\n    }, [props.arraySearchCharacterTypes]);\n\n    // useEffect(() => {\n    //     console.log(\"Characters.js useEffect url\", url);\n    // }, [url]);\n\n    // useEffect(() => {\n    //     console.log(\"Characters.js useEffect currentPage\", currentPage);\n    // }, [currentPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Characters.js useEffect nextPage\", nextPage);\n    // }, [nextPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Characters.js useEffect lastPage\", lastPage);\n    // }, [lastPage]);\n\n    // useEffect(() => {\n    //     // console.log(\"Characters.js useEffect results\", results);\n    //     // console.log(\"Characters.js useEffect results.length\", results.length);\n    // }, [results]);\n\n    useEffect(() => {\n        if (ddSearchSpecies !== undefined && ddSearchSpecies !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchSpecies\", ddSearchSpecies);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchCharacters();\n        };\n    }, [ddSearchSpecies]);\n\n    useEffect(() => {\n        if (ddSearchCharacterType !== undefined && ddSearchCharacterType !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchCharacterType\", ddSearchCharacterType);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchCharacters();\n        };\n    }, [ddSearchCharacterType]);\n\n    useEffect(() => {\n        if (ddSearchStatus !== undefined && ddSearchStatus !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchStatus\", ddSearchStatus);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchCharacters();\n        };\n    }, [ddSearchStatus]);\n\n    useEffect(() => {\n        if (ddSearchGender !== undefined && ddSearchGender !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchGender\", ddSearchGender);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchCharacters();\n        };\n    }, [ddSearchGender]);\n\n    const searchCharacters = () => {\n\n        let buildURL = props.url;\n        let searchString = \"\";\n      \n        if (txtSearchCharacterName !== undefined) {\n            if (txtSearchCharacterName.length > 0) {\n                searchString += \"&name=\" + txtSearchCharacterName.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (ddSearchStatus !== undefined) {\n          if (ddSearchStatus !== \"\") {\n            searchString += \"&status=\" + ddSearchStatus.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchSpecies !== undefined) {\n          if (ddSearchSpecies !== \"\") {\n            searchString += \"&species=\" + ddSearchSpecies.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchCharacterType !== undefined) {\n          if (ddSearchCharacterType !== \"\") {\n            searchString += \"&type=\" + ddSearchCharacterType.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchGender !== undefined) {\n          if (ddSearchGender !== \"\") {\n            searchString += \"&gender=\" + ddSearchGender.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (searchString !== \"\") {\n            console.log(\"Characters.js searchCharacters searchString\", searchString);\n            buildURL += \"?\" + searchString;\n        };\n      \n        // console.log(\"Characters.js searchCharacters buildURL\", buildURL);\n\n        setUrl(buildURL);\n      \n        // getResults();\n        getResults(buildURL);\n        \n    };\n\n    // const getResults = () => {\n    //     fetch(url)\n    const getResults = (buildURL) => {\n        // console.log(\"Characters.js getResults buildURL\", buildURL);\n\n        fetch(buildURL)\n        .then(response => {\n            console.log(\"Characters.js searchCharacters response\", response);\n            // if (!response.ok) {\n                // throw Error(response.status + \" \" + response.statusText + \" \" + response.url);\n            // } else {\n                // if (response.status === 200) {\n                    return response.json();\n                // } else {\n                //     return response.status;\n                // };\n            // };\n        })\n        .then(data => {\n            // console.log(\"Characters.js searchCharacters data\", data);\n\n            if (data.error !== undefined) {\n                console.log(\"Characters.js searchCharacters data.error\", data.error);\n                setErrMessage(data.error);\n            } else {\n\n                setLastPage(data.info.pages);\n\n                for (let i = 0; i < data.results.length; i++) {\n                    // console.log(\"Characters.js searchCharacters data.results[i].residents\", data.results[i].residents);\n                    let episodesList = \"\";\n                    let episodesArray = data.results[i].episode;\n\n                    for (let j = 0; j < episodesArray.length; j++) {\n                        // console.log(\"Characters.js searchCharacters episodesArray[j]\", episodesArray[j]);\n                        for (let k = 0; k < arrayEpisodes.length; k++) {\n                            // console.log(\"Characters.js searchCharacters arrayEpisodes[k]\", arrayEpisodes[k]);\n                            if (episodesArray[j].substr(episodesArray[j].lastIndexOf(\"/\") + 1) == arrayEpisodes[k].id) {\n                              // console.log(\"Characters.js searchCharacters character name\", arrayEpisodes[k].name, \"it's a match\");\n\n                              break;\n                            };\n                          };\n\n                          episodesList += episodesArray[j].substr(episodesArray[j].lastIndexOf(\"/\") + 1);\n                          if (j < episodesArray.length - 1) {\n                            episodesList += \",\";\n                          };\n                    };\n\n                    // console.log(\"Characters.js searchCharacters episodesList\", episodesList);\n                    Object.assign(data.results[i], {episodesList: episodesList});\n\n                };\n\n                setResults(data.results);\n                setCurrentPage(currentPage + 1);\n            };\n        })\n        .catch(err => {\n            console.log(\"Characters.js searchCharacters err\", err);\n            setErrMessage(err);\n        });\n\n    };\n\n    const getMoreResults = () => {\n        // console.log(\"Characters.js getMoreResults\");\n\n        // Clears the current results\n        // Shouldn't clear the results but add on to them\n        setResults([]);\n\n        let buildURL = url;\n\n        // Removes ?page=# to the URL\n        if (url.includes(props.paginationURL)) {\n            // console.log(URL);\n            // setUrl(url.slice(0, -7));\n            buildURL = url.slice(0, -7);\n        };\n\n        // setNextPage(currentPage + 1);\n        let buildNextPage = currentPage + 1;\n\n        // Search Pagination\n        setUrl(buildURL + props.paginationURL + buildNextPage);\n        buildURL = buildURL + props.paginationURL + buildNextPage;\n        // console.log(\"Characters.js getMoreResults buildURL\", buildURL);\n\n        getResults(buildURL);\n\n    };\n\n    return (\n        <React.Fragment>\n                {errMessage !== \"\" ? <Alert color=\"danger\">{errMessage}</Alert> : \"\"}\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                <Input type=\"text\" id=\"txtSearchCharacterName\" placeholder=\"Name\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtSearchCharacterName(event.target.value);}} />\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchSpecies\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchSpecies(event.target.value);}}>\n                    <option value=\"\">Select Species</option>\n                    {arraySearchSpecies.length > 0 ? arraySearchSpecies.map((species) => {\n                        // console.log(\"Characters.js arraySearchSpecies.map species\", species);\n                    return (\n                        <option key={species} value={species}>{species}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchCharacterType\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchCharacterType(event.target.value);}}>\n                    <option value=\"\">Select Type</option>\n                    {arraySearchCharacterTypes.length > 0 ? arraySearchCharacterTypes.map((type) => {\n                        // console.log(\"Characters.js arraySearchCharacterTypes.map type\", type);\n                    return (\n                        <option key={type} value={type}>{type}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchStatus\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchStatus(event.target.value);}}>\n                    <option value=\"\">Select Status</option>\n                    <option value=\"alive\">Alive</option>\n                    <option value=\"dead\">Dead</option>\n                    <option value=\"unknown\">Unknown</option>\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchGender\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchGender(event.target.value);}}>\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"female\">Female</option>\n                    <option value=\"male\">Male</option>\n                    <option value=\"genderless\">Genderless</option>\n                    <option value=\"unknown\">Unknown</option>\n                </Input>\n                </FormGroup>\n                </Row>\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                    <Button id=\"btnSearchCharacters\" color=\"primary\" size=\"lg\" className=\"ml-4 m-2 p-2\" onClick={searchCharacters}>Search Characters</Button>\n                </FormGroup>\n                </Row>\n                {results.length > 0 ?\n                <Row className=\"m-2\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Character results={results} setDdSearchSpecies={setDdSearchSpecies} setDdSearchCharacterType={setDdSearchCharacterType} setDdSearchStatus={setDdSearchStatus} setDdSearchGender={setDdSearchGender} />\n                        </Row>\n                        {currentPage < lastPage ?\n                        <Row className=\"justify-content-end p-4\">\n                            <Col className=\"text-right\">\n                            <a href=\"#\" onClick={getMoreResults}>more</a>\n                            </Col>\n                        </Row>\n                        : null}\n                    </Container>\n                </Row>\n                : null}\n        </React.Fragment>\n    );\n};\n\nexport default Characters;","import React, {useState, useEffect} from \"react\";\nimport {Container, Col, Row, Card, CardBody, CardLink} from \"reactstrap\";\n\nconst Location = (props) => {\n\n    // console.log(\"Location.js props.results\", props.results);\n\n    return (\n        <React.Fragment>\n\n            {props.results.length > 0 ? props.results.map((location) => {\n                        // console.log(\"Location.js results.map location\", location);\n                    return (\n\n                        <Card key={location.id} className=\"m-2 p-2\">\n                        <CardBody>\n                            <p><CardLink href={location.url} onClick={props.loadDetailsModal}>{location.name}</CardLink></p>\n                            <p>Type: <CardLink href={location.type} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Location.js props.setDdSearchLocationType(location.type)\", location.type); props.setDdSearchLocationType(location.type);}}>{location.type}</CardLink></p>\n                            <p>Dimension: <CardLink href={location.dimension} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Location.js props.setDdSearchDimension(location.dimension)\", location.dimension); props.setDdSearchDimension(location.dimension);}}>{location.dimension}</CardLink></p>\n                            <p>Resident(s): \n                            {/* {location.residents.map((resident, index) => {\n                                console.log(\"Location.js residents.map resident\", resident);\n                                return ({index})\n                                })} */}\n                                {/* {location.residentsList} */}\n                            </p>\n                            <p><CardLink href={location.residentsList} onClick={props.loadDetailsModal}>All Resident(s):</CardLink></p>\n                        </CardBody>\n                        </Card>\n                    )\n                })\n                    : null}\n\n            \n        </React.Fragment>\n    );\n};\n\nexport default Location;\n","import React, {useState, useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Container, Row, Col, FormGroup, Input, Button, Alert} from \"reactstrap\";\nimport Location from \"./Location\"\n\nconst Locations = (props) => {\n\n    // console.log(\"Locations.js props.url\", props.url);\n    // console.log(\"Locations.js props.paginationURL\", props.paginationURL);\n    // console.log(\"Locations.js props.arrayCharacters\", props.arrayCharacters);\n    // console.log(\"Locations.js props.arraySearchLocationTypes\", props.arraySearchLocationTypes);\n    // console.log(\"Locations.js props.arraySearchDimensions\", props.arraySearchDimensions);\n\n    // Build lookup arrays\n    const [arrayCharacters, setArrayCharacters] = useState([]);\n    const [arraySearchLocationTypes, setArraySearchLocationTypes] = useState([]);\n    const [arraySearchDimensions, setArraySearchDimensions] = useState([]);\n\n    // The setState seems to run too slow to be used to store the url and paging variables for the fetch; use it to keep the state between fetches.\n    const [url, setUrl] = useState(\"\");\n    const [results, setResults] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    // const [nextPage, setNextPage] = useState(0);\n    const [lastPage, setLastPage] = useState(0);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [txtSearchLocationName, setTxtSearchLocationName] = useState(\"\");\n    const [ddSearchLocationType, setDdSearchLocationType] = useState(\"\");\n    const [ddSearchDimension, setDdSearchDimension] = useState(\"\");\n\n    useEffect(() => {\n        // console.log(\"Locations.js useEffect props.arrayCharacters\", props.arrayCharacters);\n        setArrayCharacters(props.arrayCharacters);\n    }, [props.arrayCharacters]);\n\n    useEffect(() => {\n        // console.log(\"Locations.js useEffect props.arraySearchLocationTypes\", props.arraySearchLocationTypes);\n        setArraySearchLocationTypes(props.arraySearchLocationTypes);\n        // buildSearchSpeciesLookup();\n    }, [props.arraySearchLocationTypes]);\n\n    useEffect(() => {\n        // console.log(\"Locations.js useEffect props.arraySearchDimensions\", props.arraySearchDimensions);\n        setArraySearchDimensions(props.arraySearchDimensions);\n    }, [props.arraySearchDimensions]);\n\n    // useEffect(() => {\n    //     console.log(\"Locations.js useEffect props.url\", props.url);\n    // }, [url]);\n\n    // useEffect(() => {\n    //     console.log(\"Locations.js useEffect currentPage\", currentPage);\n    // }, [currentPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Locations.js useEffect nextPage\", nextPage);\n    // }, [nextPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Locations.js useEffect lastPage\", lastPage);\n    // }, [lastPage]);\n\n    // useEffect(() => {\n    //     // console.log(\"Locations.js useEffect results\", results);\n    //     // console.log(\"Locations.js useEffect results.length\", results.length);\n    // }, [results]);\n\n    useEffect(() => {\n        if (ddSearchLocationType !== undefined && ddSearchLocationType !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchLocationType\", ddSearchLocationType);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchLocations();\n        };\n    }, [ddSearchLocationType]);\n\n    useEffect(() => {\n        if (ddSearchDimension !== undefined && ddSearchDimension !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchDimension\", ddSearchDimension);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchLocations();\n        };\n    }, [ddSearchDimension]);\n\n    const searchLocations = () => {\n\n        let buildURL = props.url;\n        let searchString = \"\";\n      \n        if (txtSearchLocationName !== undefined) {\n            if (txtSearchLocationName.length > 0) {\n                searchString += \"&name=\" + txtSearchLocationName.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (ddSearchLocationType !== undefined) {\n          if (ddSearchLocationType !== \"\") {\n            searchString += \"&type=\" + ddSearchLocationType.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchDimension !== undefined) {\n          if (ddSearchDimension !== \"\") {\n            searchString += \"&dimension=\" + ddSearchDimension.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (searchString !== \"\") {\n            console.log(\"Locations.js searchLocations searchString\", searchString);\n            buildURL += \"?\" + searchString;\n        };\n      \n        // console.log(\"Locations.js searchLocations buildURL\", buildURL);\n\n        setUrl(buildURL);\n      \n        // getResults();\n        getResults(buildURL);\n\n    };\n\n    // const getResults = () => {\n    //     fetch(url)\n    const getResults = (buildURL) => {\n        // console.log(\"Locations.js getResults buildURL\", buildURL);\n\n        fetch(buildURL)\n        .then(response => {\n            // console.log(\"Locations.js searchLocations response\", response);\n            // if (!response.ok) {\n                // throw Error(response.status + \" \" + response.statusText + \" \" + response.url);\n            // } else {\n                // if (response.status === 200) {\n                    return response.json();\n                // } else {\n                //     return response.status;\n                // };\n            // };\n        })\n        .then(data => {\n            // console.log(\"Locations.js searchLocations data\", data);\n\n            if (data.error !== undefined) {\n                console.log(\"Locations.js searchLocations data.error\", data.error);\n                setErrMessage(data.error);\n            } else {\n\n                setLastPage(data.info.pages);\n\n                for (let i = 0; i < data.results.length; i++) {\n                    // console.log(\"Locations.js searchLocations data.results[i].residents\", data.results[i].residents);\n                    let residentsList = \"\";\n                    let residentsArray = data.results[i].residents;\n\n                    for (let j = 0; j < residentsArray.length; j++) {\n                        // console.log(\"Locations.js searchLocations residentsArray[j]\", residentsArray[j]);\n                        for (let k = 0; k < arrayCharacters.length; k++) {\n                            // console.log(\"Locations.js searchLocations arrayCharacters[k]\", arrayCharacters[k]);\n                            if (residentsArray[j].substr(residentsArray[j].lastIndexOf(\"/\") + 1) == arrayCharacters[k].id) {\n                              // console.log(\"Locations.js searchLocations character name\", arrayCharacters[k].name, \"it's a match\");\n\n                              break;\n                            };\n                          };\n\n                          residentsList += residentsArray[j].substr(residentsArray[j].lastIndexOf(\"/\") + 1);\n                          if (j < residentsArray.length - 1) {\n                            residentsList += \",\";\n                          };\n                    };\n\n                    // console.log(\"Locations.js searchLocations residentsList\", residentsList);\n                    Object.assign(data.results[i], {residentsList: residentsList});\n\n                };\n\n                setResults(data.results);\n                setCurrentPage(currentPage + 1);\n            };\n\n        })\n        .catch(err => {\n            console.log(\"Locations.js searchLocations err\", err);\n            setErrMessage(err);\n        });\n\n    };\n\n    const getMoreResults = () => {\n        // console.log(\"Locations.js getMoreResults\");\n\n        // Clears the current results\n        // Shouldn't clear the results but add on to them\n        setResults([]);\n\n        let buildURL = url;\n\n        // Removes ?page=# to the URL\n        if (url.includes(props.paginationURL)) {\n            // console.log(URL);\n            // setUrl(url.slice(0, -7));\n            buildURL = url.slice(0, -7);\n        };\n\n        // setNextPage(currentPage + 1);\n        let buildNextPage = currentPage + 1;\n\n        // Search Pagination\n        setUrl(buildURL + props.paginationURL + buildNextPage);\n        buildURL = buildURL + props.paginationURL + buildNextPage;\n        // console.log(\"Locations.js getMoreResults buildURL\", buildURL);\n\n        getResults(buildURL);\n\n    };\n\n    return (\n        <React.Fragment>\n                {errMessage !== \"\" ? <Alert color=\"danger\">{errMessage}</Alert> : \"\"}\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                <Input type=\"text\" id=\"txtSearchLocationName\" placeholder=\"Name\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtSearchLocationName(event.target.value);}} />\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchLocationType\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchLocationType(event.target.value);}} >\n                    <option value=\"\">Select Type</option>\n                    {arraySearchLocationTypes.length > 0 ? arraySearchLocationTypes.map((type) => {\n                        // console.log(\"Locations.js arraySearchLocationTypes.map type\", type);\n                    return (\n                        <option key={type} value={type}>{type}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchDimension\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchDimension(event.target.value);}} >\n                    <option value=\"\">Select Dimension</option>\n                    {arraySearchDimensions.length > 0 ? arraySearchDimensions.map((dimension) => {\n                        // console.log(\"Locations.js arraySearchDimensions.map dimension\", dimension);\n                    return (\n                        <option key={dimension} value={dimension}>{dimension}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                </Row>\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                    <Button id=\"btnSearchLocations\" color=\"primary\" size=\"lg\" className=\"ml-4 m-2 p-2\" onClick={searchLocations}>Search Locations</Button>\n                </FormGroup>\n                </Row>\n                {results.length > 0 ?\n                <Row className=\"m-2\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Location results={results} setDdSearchLocationType={setDdSearchLocationType} setDdSearchDimension={setDdSearchDimension} />\n                        </Row>\n                        {currentPage < lastPage ?\n                        <Row className=\"justify-content-end p-4\">\n                            <Col className=\"text-right\">\n                            <a href=\"#\" onClick={getMoreResults}>more</a>\n                            </Col>\n                        </Row>\n                        : null}\n                    </Container>\n                </Row>\n                : null}\n        </React.Fragment>\n    );\n};\n\nexport default Locations;","import React, {useState, useEffect} from \"react\";\nimport {Container, Col, Row, Card, CardBody, CardLink} from \"reactstrap\";\n\nconst Episode = (props) => {\n\n    // console.log(\"Episode.js props.results\", props.results);\n\n    return (\n        <React.Fragment>\n\n            {props.results.length > 0 ? props.results.map((episode) => {\n                        // console.log(\"Episode.js results.map episode\", episode);\n                    return (\n\n                        <Card key={episode.id} className=\"m-2 p-2\">\n                        <CardBody>\n                            <p><CardLink href={episode.url} onClick={props.loadDetailsModal}>{episode.name}</CardLink></p>\n                            <p>Episode: {episode.episode}</p>\n                            <p>Air Date: {episode.air_date}</p>\n                            <p>Character(s): \n                            {/* {episode.characters.map((character, index) => {\n                                console.log(\"Episode.js characters.map character\", character);\n                                return ({index})\n                                })} */}\n                                {/* {episode.charactersList} */}\n                            </p>\n                            <p><CardLink href={episode.charactersList} onClick={props.loadDetailsModal}>All Character(s):</CardLink></p>\n                        </CardBody>\n                        </Card>\n                    )\n                })\n                    : null}\n\n        </React.Fragment>\n    );\n};\n\nexport default Episode;\n","import React, {useState, useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Container, Row, Col, FormGroup, Input, Button, Alert} from \"reactstrap\";\nimport Episode from \"./Episode\"\n\nconst Episodes = (props) => {\n\n    // console.log(\"Episodes.js props.url\", props.url);\n    // console.log(\"Episodes.js props.paginationURL\", props.paginationURL);\n    // console.log(\"Episodes.js props.arrayCharacters\", props.arrayCharacters);\n    // console.log(\"Episodes.js props.arrayLocations\", props.arrayLocations);\n\n    // Build lookup arrays\n    const [arrayCharacters, setArrayCharacters] = useState([]);\n\n    // The setState seems to run too slow to be used to store the url and paging variables for the fetch; use it to keep the state between fetches.\n    const [url, setUrl] = useState(\"\");\n    const [results, setResults] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    // const [nextPage, setNextPage] = useState(0);\n    const [lastPage, setLastPage] = useState(0);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [txtSearchEpisodeName, setTxtSearchEpisodeName] = useState(\"\");\n    const [txtEpisode, setTxtEpisode] = useState(\"\");\n\n    useEffect(() => {\n        // console.log(\"Episodes.js useEffect props.arrayCharacters\", props.arrayCharacters);\n        setArrayCharacters(props.arrayCharacters);\n    }, [props.arrayCharacters]);\n\n    // useEffect(() => {\n    //     console.log(\"Episodes.js useEffect props.url\", props.url);\n    // }, [url]);\n\n    // useEffect(() => {\n    //     console.log(\"Episodes.js useEffect currentPage\", currentPage);\n    // }, [currentPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Episodes.js useEffect nextPage\", nextPage);\n    // }, [nextPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Episodes.js useEffect lastPage\", lastPage);\n    // }, [lastPage]);\n\n    // useEffect(() => {\n    //     // console.log(\"Episodes.js useEffect results\", results);\n    //     // console.log(\"Episodes.js useEffect results.length\", results.length);\n    // }, [results]);\n\n    const searchEpisodes = () => {\n        // Only run the first time the form is submitted\n        let buildURL = props.url;\n        let searchString = \"\";\n      \n        if (txtSearchEpisodeName !== undefined) {\n            if (txtSearchEpisodeName.length > 0) {\n                searchString += \"&name=\" + txtSearchEpisodeName.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (txtEpisode !== undefined) {\n            if (txtEpisode.length > 0) {\n                searchString += \"&episode=\" + txtEpisode.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (searchString !== \"\") {\n            console.log(\"Episodes.js searchEpisodes searchString\", searchString);\n            buildURL += \"?\" + searchString;\n        };\n      \n        // console.log(\"Episodes.js searchEpisodes buildURL\", buildURL);\n\n        setUrl(buildURL);\n      \n        // getResults();\n        getResults(buildURL);\n\n    };\n\n    // const getResults = () => {\n    //     fetch(url)\n    const getResults = (buildURL) => {\n        // console.log(\"Episodes.js getResults buildURL\", buildURL);\n\n        fetch(buildURL)\n        .then(response => {\n            // console.log(\"Episodes.js getResults response\", response);\n            // if (!response.ok) {\n                // throw Error(response.status + \" \" + response.statusText + \" \" + response.url);\n            // } else {\n                // if (response.status === 200) {\n                    return response.json();\n                // } else {\n                //     return response.status;\n                // };\n            // };\n        })\n        .then(data => {\n            // console.log(\"Episodes.js getResults data\", data);\n\n            if (data.error !== undefined) {\n                console.log(\"Episodes.js getResults data.error\", data.error);\n                setErrMessage(data.error);\n            } else {\n\n                setLastPage(data.info.pages);\n\n                for (let i = 0; i < data.results.length; i++) {\n                    // console.log(\"Episodes.js getResults data.results[i].residents\", data.results[i].residents);\n                    let charactersList = \"\";\n                    let charactersArray = data.results[i].characters;\n\n                    for (let j = 0; j < charactersArray.length; j++) {\n                        // console.log(\"Episodes.js getResults charactersArray[j]\", charactersArray[j]);\n                        for (let k = 0; k < arrayCharacters.length; k++) {\n                            // console.log(\"Episodes.js getResults arrayCharacters[k]\", arrayCharacters[k]);\n                            if (charactersArray[j].substr(charactersArray[j].lastIndexOf(\"/\") + 1) == arrayCharacters[k].id) {\n                              // console.log(\"Episodes.js getResults character name\", arrayCharacters[k].name, \"it's a match\");\n\n                              break;\n                            };\n                          };\n\n                          charactersList += charactersArray[j].substr(charactersArray[j].lastIndexOf(\"/\") + 1);\n                          if (j < charactersArray.length - 1) {\n                            charactersList += \",\";\n                          };\n                    };\n\n                    // console.log(\"Episodes.js getResults charactersList\", charactersList);\n                    Object.assign(data.results[i], {charactersList: charactersList});\n\n                };\n\n                setResults(data.results);\n                setCurrentPage(currentPage + 1);\n            };\n        })\n        .catch(err => {\n            console.log(\"Episodes.js getResults err\", err);\n            setErrMessage(err);\n        });\n\n    };\n\n    const getMoreResults = () => {\n        // console.log(\"Episodes.js getMoreResults\");\n\n        // Clears the current results\n        // Shouldn't clear the results but add on to them\n        setResults([]);\n\n        let buildURL = url;\n\n        // Removes ?page=# to the URL\n        if (url.includes(props.paginationURL)) {\n            // console.log(URL);\n            // setUrl(url.slice(0, -7));\n            buildURL = url.slice(0, -7);\n        };\n\n        // setNextPage(currentPage + 1);\n        let buildNextPage = currentPage + 1;\n\n        // Search Pagination\n        setUrl(buildURL + props.paginationURL + buildNextPage);\n        buildURL = buildURL + props.paginationURL + buildNextPage;\n        // console.log(\"Episodes.js getMoreResults buildURL\", buildURL);\n\n        getResults(buildURL);\n\n    };\n\n    return (\n        <React.Fragment>\n                {errMessage !== \"\" ? <Alert color=\"danger\">{errMessage}</Alert> : \"\"}\n                <Row className=\"m-2\">\n                    <FormGroup className=\"m-2\">\n                    <Input type=\"text\" id=\"txtSearchEpisodeName\" placeholder=\"Name\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtSearchEpisodeName(event.target.value);}} />\n                    </FormGroup>\n                    <FormGroup className=\"m-2\">\n                    <Input type=\"text\" id=\"txtEpisode\" placeholder=\"Episode\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtEpisode(event.target.value);}} />\n                    </FormGroup>\n                </Row>\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                    <Button id=\"btnSearchEpisodes\" color=\"primary\" size=\"lg\" className=\"ml-4 m-2 p-2\" onClick={searchEpisodes}>Search Episodes</Button>\n                </FormGroup>\n                </Row>\n                {results.length > 0 ?\n                <Row className=\"m-2\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Episode results={results} />\n                        </Row>\n                        {currentPage < lastPage ?\n                        <Row className=\"justify-content-end p-4\">\n                            <Col className=\"text-right\">\n                            <a href=\"#\" onClick={getMoreResults}>more</a>\n                            </Col>\n                        </Row>\n                        : null}\n                    </Container>\n                </Row>\n                : null}\n        </React.Fragment>\n    );\n};\n\nexport default Episodes;","import React, {useState, useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport {Col, Row, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, Jumbotron, TabContent, TabPane, Alert} from \"reactstrap\";\nimport classnames from \"classnames\";\nimport Characters from \"./Components/Characters/Characters\";\nimport Locations from \"./Components/Locations/Locations\";\nimport Episodes from \"./Components/Episodes/Episodes\";\n\nfunction App() {\n\n  // const baseURL = \"https://rickandmortyapi.com/api/\";\n  const charactersURL = \"https://rickandmortyapi.com/api/character/\";\n  const locationsURL = \"https://rickandmortyapi.com/api/location/\";\n  const episodesURL = \"https://rickandmortyapi.com/api/episode/\";\n  const paginationURL = \"?page=\"\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"0\");\n  const [errBuildCharacterLookups, setErrBuildCharacterLookups] = useState(\"\");\n  const [errBuildLocationLookups, setErrBuildLocationLookups] = useState(\"\");\n  const [errBuildEpisodeLookups, setErrBuildEpisodeLookups] = useState(\"\");\n\n  // Build lookup arrays\n  const [arrayCharacters, setArrayCharacters] = useState([]);\n  const [arrayLocations, setArrayLocations] = useState([]);\n  const [arrayEpisodes, setArrayEpisodes] = useState([]);\n\n  const [arraySearchSpecies, setArraySearchSpecies] = useState([]);\n  const [arraySearchCharacterTypes, setArraySearchCharacterTypes] = useState([]);\n  const [arraySearchLocationTypes, setArraySearchLocationTypes] = useState([]);\n  const [arraySearchDimensions, setArraySearchDimensions] = useState([]);\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const toggleTab = (tab) => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    };\n  };\n\n  const loadAllLookupArrays = () => {\n\n    // Build lookup arrays\n    let arrCharacters = [];\n    let arrLocations = [];\n    let arrEpisodes = [];\n\n    let arrSearchSpecies = [];\n    let arrSearchCharacterTypes = [];\n    let arrSearchLocationTypes = [];\n    let arrSearchDimensions = [];\n\n    // Create characters URL of all possible character IDs?\n    // Fetch that and read results\n    // current total number of characters + to get the correct index value(?)\n    // used a number higher than the current total number of characters and it worked\n\n    let lastPageOfCharacterResults;\n    let totalNumberOfCharacters; // = 700 + 1; // Just over the hishest character id on 09/04/2020\n    let charactersIDList = \"\";\n\n    fetch(charactersURL)\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      // Assumes that the highest character id = record count\n      // totalNumberOfCharacters = jsonData.info.count; // + 1; to account for the index of the array starting at zero -- Not needed\n      // console.log(\"totalNumberOfCharacters\", totalNumberOfCharacters);\n      lastPageOfCharacterResults = charactersURL + paginationURL + jsonData.info.pages;\n      // console.log(\"lastPageOfCharacterResults\", lastPageOfCharacterResults);\n\n      return fetch(lastPageOfCharacterResults);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData.results;\n      // console.log(results);\n\n      // console.log(\"results.length\", results.length);\n      totalNumberOfCharacters = results[results.length - 1].id;\n      // console.log(\"totalNumberOfCharacters\", totalNumberOfCharacters);\n\n      for (let i = 1; i < totalNumberOfCharacters; i++) {\n        charactersIDList += i;\n          if (i < totalNumberOfCharacters - 1) {\n            charactersIDList += \",\";\n          };\n      };\n      \n      // console.log(\"charactersIDList\", charactersIDList);\n      // console.log(\"charactersURL\", charactersURL + charactersIDList);\n\n      // From https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\n      return fetch(charactersURL + charactersIDList);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData;\n      \n      // Build lookup arrays\n      // https://truetocode.com/check-for-duplicates-in-array-of-javascript-objects/\n      for (let i = 0; i < results.length; i++) {\n        let arrIDs =  arrCharacters.map((value)=>{return value.id;});\n        if (arrIDs.indexOf(results[i].id) === -1) {\n          arrCharacters.push({id: results[i].id, name: results[i].name, url: results[i].url});\n        };\n        // a.findIndex(t=>(t.place === v.place && t.name===v.name))===i) // https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n        // seen.hasOwnProperty(currentObject.name) // https://stackoverflow.com/questions/30735465/how-can-i-check-if-the-array-of-objects-have-duplicate-property-values\n        //if (!arrCharacters.hasOwnProperty(results[i].id)) { // How's this work with an object?\n        // if statement isn't working correcly\n        //  arrCharacters.push({id: results[i].id, name: results[i].name, url: results[i].url});\n        // };\n\n        // https://www.geeksforgeeks.org/how-to-remove-duplicates-from-an-array-of-objects-using-javascript/\n        // copiedarrCharacters = [...arrCharacters];\n        // arrCharacters = copiedarrCharacters.filter(function(item, index){\n        //   return copiedarrCharacters.indexOf(item) >= index;\n        // });\n\n        // https://dev.to/marinamosti/removing-duplicates-in-an-array-of-objects-in-js-with-sets-3fep\n        // let copiedarrCharacters = Array.from(new Set(id.map(a => a.id))).map(id => { return id.find(a => a.id === id) });\n        // console.log(copiedarrCharacters);\n\n        if (results[i].species !== \"\") {\n          if (arrSearchSpecies.indexOf(results[i].species) === -1) {\n            arrSearchSpecies.push(results[i].species);\n          };\n        };\n        if (results[i].type !== \"\") {\n          if (arrSearchCharacterTypes.indexOf(results[i].type) === -1) {\n            arrSearchCharacterTypes.push(results[i].type);\n          };\n        };\n    };\n\n      // Sort the array\n      arrSearchSpecies.sort((a, b) => {\n        if (a > b) {\n            return 1;\n        } else {\n            return -1;\n        };\n      });\n\n      // Sort the array\n      arrSearchCharacterTypes.sort((a, b) => {\n        if (a > b) {\n            return 1;\n        } else {\n            return -1;\n        };\n      });\n\n      // View lookup arrays\n      // console.log(\"App.js loadAllLookupArrays arrCharacters\", arrCharacters);\n      // console.log(\"App.js loadAllLookupArrays arrSearchSpecies\", arrSearchSpecies);\n      // console.log(\"App.js loadAllLookupArrays arrSearchCharacterTypes\", arrSearchCharacterTypes);\n\n    })\n    .catch(err => {\n      console.log(\"App.js loadAllLookupArrays Character Lookups err\", err);\n      setErrBuildCharacterLookups(err);\n    });\n\n\n\n\n\n    // Create locations URL of all possible location IDs?\n    // Fetch that and read results\n    // current total number of locations + to get the correct index value(?)\n    // used a number higher than the current total number of locations and it worked\n    let lastPageOfLocationResults;\n    let totalNumberOfLocations; // = 50 + 1; // Just over the hishest location id on 09/04/2020\n    let locationIDList = \"\";\n\n    fetch(locationsURL)\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      // Assumes that the highest character id = record count\n      // totalNumberOfLocations = jsonData.info.count; // + 1; to account for the index of the array starting at zero -- Not needed\n      // console.log(\"totalNumberOfLocations\", totalNumberOfLocations);\n      lastPageOfLocationResults = locationsURL + paginationURL + jsonData.info.pages;\n      // console.log(\"lastPageOfLocationResults\", lastPageOfLocationResults);\n\n      return fetch(lastPageOfLocationResults);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData.results;\n      // console.log(results);\n\n      // console.log(\"results.length\", results.length);\n      totalNumberOfLocations = results[results.length - 1].id;\n      // console.log(\"totalNumberOfLocations\", totalNumberOfLocations);\n\n      for (let i = 1; i < totalNumberOfLocations; i++) {\n        locationIDList += i;\n          if (i < totalNumberOfLocations - 1) {\n            locationIDList += \",\";\n          };\n      };\n      \n      // console.log(\"locationIDList\", locationIDList);\n      // console.log(\"locationsURL\", locationsURL + locationIDList);\n\n      // From https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\n      return fetch(locationsURL + locationIDList);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData;\n\n      // Build lookup arrays\n      for (let i = 0; i < results.length; i++) {\n        let arrIDs =  arrLocations.map((value)=>{ return value.id;});\n        if (arrIDs.indexOf(results[i].id) === -1) {\n          arrLocations.push({id: results[i].id, name: results[i].name, url: results[i].url});\n        };\n\n        if (results[i].type !== \"\") {\n          if (arrSearchLocationTypes.indexOf(results[i].type) === -1) {\n            arrSearchLocationTypes.push(results[i].type);\n          };\n        };\n        if (results[i].dimension !== \"\") {\n          if (arrSearchDimensions.indexOf(results[i].dimension) === -1) {\n            arrSearchDimensions.push(results[i].dimension);\n          };\n        };\n      };\n\n      // Sort the array\n      arrSearchLocationTypes.sort((a, b) => {\n        if (a > b) {\n            return 1;\n        } else {\n            return -1;\n        };\n      });\n\n      // Sort the array\n      arrSearchDimensions.sort((a, b) => {\n        if (a > b) {\n            return 1;\n        } else {\n            return -1;\n        };\n      });\n\n    // View lookup arrays\n    // console.log(\"App.js loadAllLookupArrays arrLocations\", arrLocations);\n    // console.log(\"App.js loadAllLookupArrays arrSearchLocationTypes\", arrSearchLocationTypes);\n    // console.log(\"App.js loadAllLookupArrays arrSearchDimensions\", arrSearchDimensions);\n\n    })\n    .catch(err => {\n      console.log(\"App.js loadAllLookupArrays Location Lookups err\", err);\n      setErrBuildLocationLookups(err);\n    });\n\n\n\n\n    // Create episode URL of all possible episode IDs?\n    // Fetch that and read results\n    // current total number of episodes + to get the correct index value(?)\n    // used a number higher than the current total number of episodes and it worked\n    let lastPageOfEpisodeResults;\n    let totalNumberOfEpisodes; // = 50 + 1;// Just over the hishest episode id on 09/04/2020\n    let episodeIDList = \"\";\n\n    fetch(episodesURL)\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      // Assumes that the highest character id = record count\n      // totalNumberOfEpisodes = jsonData.info.count; // + 1; to account for the index of the array starting at zero -- Not needed\n      // console.log(\"totalNumberOfEpisodes\", totalNumberOfEpisodes);\n      lastPageOfEpisodeResults = locationsURL + paginationURL + jsonData.info.pages;\n      // console.log(\"lastPageOfEpisodeResults\", lastPageOfEpisodeResults);\n\n      return fetch(lastPageOfEpisodeResults);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData.results;\n      // console.log(results);\n\n      // console.log(\"results.length\", results.length);\n      totalNumberOfEpisodes = results[results.length - 1].id;\n      // console.log(\"totalNumberOfEpisodes\", totalNumberOfEpisodes);\n\n      for (let i = 1; i < totalNumberOfEpisodes; i++) {\n        episodeIDList += i;\n          if (i < totalNumberOfEpisodes - 1) {\n            episodeIDList += \",\";\n          };\n      };\n      \n      // console.log(\"episodeIDList\", episodeIDList);\n      // console.log(\"episodesURL\", episodesURL + episodeIDList);\n\n      // From https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\n      return fetch(episodesURL + episodeIDList);\n    })\n    .then(result => {\n        // console.log(result);\n        return result.json();\n    })\n    .then(jsonData => {\n      // console.log(jsonData);\n      let results = jsonData;\n\n      // Build lookup arrays\n      for (let i = 0; i < results.length; i++) {\n        let arrIDs =  arrEpisodes.map((value)=>{ return value.id;});\n        if (arrIDs.indexOf(results[i].id) === -1) {\n          arrEpisodes.push({id: results[i].id, name: results[i].name, url: results[i].url});\n        };\n      };\n\n      // View lookup arrays\n      // console.log(\"App.js loadAllLookupArrays arrEpisodes\", arrEpisodes);\n\n    })\n    .catch(err => {\n        console.log(\"App.js loadAllLookupArrays Episode Lookups err\", err);\n        setErrBuildEpisodeLookups(err);\n    });\n\n\n  setArrayCharacters(arrCharacters);\n  setArrayLocations(arrLocations);\n  setArrayEpisodes(arrEpisodes);\n\n  setArraySearchSpecies(arrSearchSpecies);\n  setArraySearchCharacterTypes(arrSearchCharacterTypes);\n  setArraySearchLocationTypes(arrSearchLocationTypes);\n  setArraySearchDimensions(arrSearchDimensions);\n\n  };\n\n  useEffect(() => {\n\n    loadAllLookupArrays();\n\n  }, []);\n\n  useEffect(() => {\n    // console.log(\"App.js useEffect arrayCharacters\", arrayCharacters);\n  }, [arrayCharacters]);\n\n  useEffect(() => {\n    // console.log(\"App.js useEffect arrayLocations\", arrayLocations);\n  }, [arrayLocations]);\n\n  useEffect(() => {\n    // console.log(\"App.js useEffect arrayEpisodes\", arrayEpisodes);\n  }, [arrayEpisodes]);\n  \n  useEffect(() => {\n    // console.log(\"App.js useEffect arraySearchSpecies\", arraySearchSpecies);\n  }, [arraySearchSpecies]);\n  \n  useEffect(() => {\n    // console.log(\"App.js useEffect arraySearchCharacterTypes\", arraySearchCharacterTypes);\n  }, [arraySearchCharacterTypes]);\n  \n  useEffect(() => {\n    // console.log(\"App.js useEffect arraySearchLocationTypes\", arraySearchLocationTypes);\n  }, [arraySearchLocationTypes]);\n  \n  useEffect(() => {\n    // console.log(\"App.js useEffect arraySearchDimensions\", arraySearchDimensions);\n  }, [arraySearchDimensions]);\n  \n\n  return (\n    <React.Fragment>\n    <Navbar color=\"light\" light expand=\"md\">\n      <NavbarBrand href=\"#\">Rick and Morty</NavbarBrand>\n      <NavbarToggler onClick={toggleMenu} />\n      <Collapse isOpen={isOpen} navbar>\n      <Nav className=\"mr-auto\" navbar>\n        <NavItem>\n          <NavLink href=\"https://rickandmortyapi.com\" target=\"_blank\">Rick and Morty API</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"https://rickandmortyapi.com/documentation\" target=\"_blank\">Rick and Morty API Documentation</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"https://mirfishe.github.io/Rick-and-Morty-API/\" target=\"_blank\">Rick and Morty Version 1</NavLink>\n        </NavItem>\n        </Nav>\n      </Collapse>\n    </Navbar>\n\n    <Jumbotron>\n        <h1 className=\"display-3\">Rick and Morty</h1>\n    </Jumbotron>\n\n    {errBuildCharacterLookups !== \"\" ? <Alert color=\"danger\">{errBuildCharacterLookups}</Alert> : \"\"}\n    {errBuildLocationLookups !== \"\" ? <Alert color=\"danger\">{errBuildLocationLookups}</Alert> : \"\"}\n    {errBuildEpisodeLookups !== \"\" ? <Alert color=\"danger\">{errBuildEpisodeLookups}</Alert> : \"\"}\n\n    <Nav tabs className=\"m-2\">\n      <NavItem>\n        <NavLink className={classnames({active: activeTab === \"1\"})} onClick={() => {toggleTab(\"1\");}}>Search Characters</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className={classnames({active: activeTab === \"2\"})} onClick={() => {toggleTab(\"2\");}}>Search Locations</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className={classnames({active: activeTab === \"3\"})} onClick={() => {toggleTab(\"3\");}}>Search Episodes</NavLink>\n      </NavItem>\n    </Nav>\n    <TabContent activeTab={activeTab}>\n      <TabPane tabId=\"1\">\n        <Row>\n          <Col sm=\"12\">\n            <Characters url={charactersURL} paginationURL={paginationURL} arrayLocations={arrayLocations} arrayEpisodes={arrayEpisodes} arraySearchSpecies={arraySearchSpecies} arraySearchCharacterTypes={arraySearchCharacterTypes} />\n          </Col>\n        </Row>\n      </TabPane>\n      </TabContent>\n      <TabContent activeTab={activeTab}>\n      <TabPane tabId=\"2\">\n        <Row>\n          <Col sm=\"12\">\n            <Locations url={locationsURL} paginationURL={paginationURL} arrayCharacters={arrayCharacters} arraySearchLocationTypes={arraySearchLocationTypes} arraySearchDimensions={arraySearchDimensions} />\n          </Col>\n        </Row>\n      </TabPane>\n      </TabContent>\n      <TabContent activeTab={activeTab}>\n      <TabPane tabId=\"3\">\n        <Row>\n          <Col sm=\"12\">\n            <Episodes url={episodesURL} paginationURL={paginationURL} arrayCharacters={arrayCharacters} />\n          </Col>\n        </Row>\n      </TabPane>\n    </TabContent>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}